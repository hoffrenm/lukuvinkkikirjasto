{"version":3,"sources":["services/tips.js","reducers/tipReducer.js","hooks/index.js","components/AddTip.js","components/Loading.js","components/NoTips.js","components/TipList.js","App.js","store.js","index.js"],"names":["getAll","a","axios","get","results","data","create","newObject","post","response","initialState","tipdata","processing","error","tipReducer","state","action","type","newTitle","newUrl","name","useField","useState","value","setValue","onChange","event","target","reset","connectedAddTip","connect","tips","addTip","e","tip","dispatch","preventDefault","tipService","result","newTip","props","title","url","removeReset","className","onSubmit","data-cy","id","Loading","NoTips","to","connectedTipList","length","map","key","connectedApp","initTips","useEffect","path","render","exact","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.9e1987db.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/tips'\r\n\r\nconst getAll = async () => {\r\n  const results = await axios.get(baseUrl)\r\n  return results.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const response = await axios.post(baseUrl, newObject)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, create }\r\n","import tipService from '../services/tips'\r\n\r\nexport const initTips = () => {\r\n    return async dispatch => {\r\n        const result = await tipService.getAll();\r\n  \r\n        dispatch({\r\n            type: 'INIT_TIPS',\r\n        });\r\n\r\n        if (result) {\r\n            dispatch({\r\n                type: 'ACTION_SUCCESS',\r\n                name: 'list',\r\n                data: result\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: 'ACTION_FAIL',\r\n                data: result,\r\n                name: 'add'\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const addTip = (e, tip) => {\r\n  return async dispatch => {\r\n    e.preventDefault()\r\n\r\n    const result = await tipService.create(tip)\r\n    const newTip = result\r\n\r\n    dispatch({\r\n      type: 'ADD_TIP',\r\n      data: newTip,\r\n      name: 'add'\r\n    })\r\n\r\n    if (result) {\r\n      dispatch({\r\n        type: 'ACTION_SUCCESS',\r\n        name: 'add',\r\n        data: newTip\r\n      })\r\n    } else {\r\n      dispatch({\r\n        type: 'ACTION_FAIL',\r\n        data: tip,\r\n        name: 'add'\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  tipdata: [],\r\n  processing: true,\r\n  error: null\r\n}\r\n\r\nconst tipReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'INIT_TIPS':\r\n      return {\r\n        ...state,\r\n        processing: true,\r\n        tipdata: action.data\r\n      }\r\n    case 'ADD_TIP':\r\n      return {\r\n        ...state,\r\n        tipdata: [...state.tipdata, action.data],\r\n        processing: true,\r\n        newTitle: '',\r\n        newUrl: ''\r\n      }\r\n    case 'ACTION_SUCCESS':\r\n      return {\r\n        ...state,\r\n        [action.name]: false,\r\n        tipdata: action.data,\r\n        processing: false,\r\n        error: null\r\n      }\r\n    case 'ACTION_FAIL':\r\n      return {\r\n        ...state,\r\n        error: action.name,\r\n        processing: false\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default tipReducer\r\n","import { useState } from 'react'\r\n\r\nexport const useField = type => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = event => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const reset = () => {\r\n    setValue('')\r\n  }\r\n\r\n  return {\r\n    type,\r\n    value,\r\n    onChange,\r\n    reset\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addTip } from '../reducers/tipReducer'\r\nimport { useField } from '../hooks/index'\r\n\r\nconst AddTip = props => {\r\n  const title = useField('text')\r\n  const url = useField('text')\r\n\r\n  const removeReset = ({ reset: _, ...clone }) => clone\r\n\r\n  return (\r\n    <div className=\"form form--add-tip\">\r\n      <h3>Lisää vinkki</h3>\r\n      <form\r\n        onSubmit={e =>\r\n          props.addTip(e, {\r\n            title: title.value,\r\n            url: url.value\r\n          })\r\n        }\r\n      >\r\n        <div>\r\n          <label>Otsikko</label>\r\n          <input data-cy=\"tip-title\" id=\"tip_title\" {...removeReset(title)} />\r\n        </div>\r\n        <div>\r\n          <label>Linkki</label>\r\n          <input data-cy=\"tip-url\" id=\"tip_url\" {...removeReset(url)} />\r\n        </div>\r\n        <button\r\n          className=\"button button-primary button-submit\"\r\n          data-cy=\"add-tip\"\r\n          type=\"submit\"\r\n        >\r\n          Lisää\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    newTitle: state.tips.newTitle,\r\n    newUrl: state.tips.newUrl\r\n  }\r\n}\r\n\r\nconst connectedAddTip = connect(mapStateToProps, {\r\n  addTip\r\n})(AddTip)\r\n\r\nexport default connectedAddTip\r\n","import React from 'react';\r\n\r\nconst Loading = () => (\r\n    <div>Lataillaan...</div>\r\n);\r\n\r\nexport default Loading;","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NoTips = () => (\r\n    <div>\r\n        <p>Et ole lisännyt vinkkejä vielä</p>\r\n        <Link to={\"/add-tip\"} >\r\n             <button className=\"button button-primary\">Lisää uusi vinkki</button>\r\n        </Link>\r\n    </div>\r\n);\r\n\r\nexport default NoTips;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from './Loading';\r\nimport NoTips from './NoTips';\r\n\r\nconst TipList = props => {\r\n    const {\r\n        processing,\r\n        tipdata\r\n    } = props.tips;\r\n\r\n    if (processing) {\r\n        return <Loading />\r\n    }\r\n\r\n    if ( tipdata.length === 0 ) {\r\n        return <NoTips />\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Lukuvinkit</h2>\r\n      {tipdata.map(tip => {\r\n        return (\r\n          <div data-cy=\"tip-item\" key={tip.id} className=\"tip-list-item\">\r\n            <div className=\"tip-content\">\r\n              {tip.title} - {tip.url}\r\n            </div>\r\n          </div>\r\n        )\r\n      })}\r\n        <Link to={\"/add-tip\"} >\r\n             <button className=\"button button-primary\">Lisää vinkki</button>\r\n        </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tips: state.tips\r\n  }\r\n}\r\n\r\nconst connectedTipList = connect(mapStateToProps)(TipList)\r\nexport default connectedTipList\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { initTips } from './reducers/tipReducer';\r\n\r\nimport AddTip from './components/AddTip';\r\nimport TipList from './components/TipList';\r\n\r\nconst App = props => {\r\n  useEffect(() => {\r\n    if (props.tips.processing) {\r\n      props.initTips();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"heading heading__h1\">Lukuvinkkikirjasto</h1>\r\n      <div className=\"content-container\">\r\n        <Route path=\"/add-tip\" render={() => <AddTip />} />\r\n\r\n        <Route exact path=\"/\" render={() => <TipList />} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tips: state.tips\r\n  }\r\n}\r\n\r\nconst connectedApp = connect(mapStateToProps, {\r\n  initTips\r\n})(App)\r\nexport default connectedApp\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport tipReducer from './reducers/tipReducer'\r\n\r\nconst reducer = combineReducers({\r\n  tips: tipReducer\r\n})\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk))\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport store from './store'\r\n\r\nconst render = () => {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>,\r\n    document.getElementById('app')\r\n  )\r\n}\r\n\r\nrender()\r\nstore.subscribe(render)\r\n"],"sourceRoot":""}