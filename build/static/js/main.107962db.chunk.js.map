{"version":3,"sources":["services/tips.js","reducers/tipReducer.js","hooks/index.js","components/AddTip.js","components/Loading.js","components/NoTips.js","components/TipList.js","App.js","store.js","index.js"],"names":["getAll","a","axios","get","response","create","newObject","post","initialState","tipdata","processing","error","tipReducer","state","action","type","unsortedTips","concat","data","sort","b","id","useField","useState","value","setValue","onChange","event","target","reset","connectedAddTip","connect","addTip","e","tip","dispatch","preventDefault","tipService","result","status","props","title","url","removeReset","className","onSubmit","data-cy","Loading","NoTips","connectedTipList","tips","length","console","log","map","key","href","connectedApp","initTips","useEffect","path","render","reducer","combineReducers","store","createStore","applyMiddleware","thunk","subscribe","getState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.107962db.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/tips'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response\n}\n\nconst create = async newObject => {\n  const response = await axios.post(baseUrl, newObject)\n  return response\n}\n\nexport default { getAll, create }\n","import tipService from '../services/tips'\n\nexport const initTips = () => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'INIT_TIPS',\n    })\n\n    const result = await tipService.getAll()\n\n    if (result.status === 200) {\n      dispatch({\n        type: 'ACTION_SUCCESS',\n        data: result.data,\n      })\n    } else {\n      dispatch({\n        type: 'ACTION_FAIL',\n        data: result,\n      })\n    }\n  }\n}\n\nexport const addTip = (e, tip) => {\n  return async (dispatch) => {\n    e.preventDefault()\n\n    dispatch({\n      type: 'ADD_TIP'\n    })\n\n    const result = await tipService.create(tip)\n\n    if (result.status === 201) {\n      dispatch({\n        type: 'ACTION_SUCCESS',\n        data: result.data\n      })\n    } else {\n      dispatch({\n        type: 'ACTION_FAIL',\n        data: result\n      })\n    }\n  }\n}\n\nconst initialState = {\n  tipdata: [],\n  processing: true,\n  error: null,\n}\n\nconst tipReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'INIT_TIPS':\n      return {\n        ...state,\n        processing: true\n      }\n    case 'ADD_TIP':\n      return {\n        ...state,\n        processing: true,\n      }\n    case 'ACTION_SUCCESS':\n      var unsortedTips = state.tipdata.concat(action.data)\n      return {\n        ...state,\n        tipdata: unsortedTips.sort((a, b) => b.id - a.id),\n        processing: false,\n        error: null\n      }\n    case 'ACTION_FAIL':\n      return {\n        ...state,\n        error: action.data,\n        processing: false\n      }\n    default:\n      return state\n  }\n}\n\nexport default tipReducer","import { useState } from 'react'\n\nexport const useField = (type) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const reset = () => {\n    setValue('')\n  }\n\n  return {\n    type,\n    value,\n    onChange,\n    reset,\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addTip } from '../reducers/tipReducer'\nimport { useField } from '../hooks/index'\n\nconst AddTip =  (props) => {\n  const title = useField('text')\n  const url = useField('text')\n\n  // eslint-disable-next-line\n  const removeReset = ({ reset: _, ...clone }) => clone\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.addTip(e, {\n      title: title.value,\n      url: url.value\n    })\n    title.reset()\n    url.reset()\n  }\n\n  return (\n    <div className=\"form form--add-tip\">\n      <h3>Lisää vinkki</h3>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Otsikko</label>\n          <input\n            data-cy=\"tip-title\"\n            id=\"tip_title\"\n            {...removeReset(title)}\n          />\n        </div>\n        <div>\n          <label>Linkki</label>\n          <input\n            data-cy=\"tip-url\"\n            id=\"tip_url\"\n            {...removeReset(url)}\n          />\n        </div>\n        <button\n          className=\"button button-primary button-submit\"\n          data-cy=\"add-tip\"\n          type=\"submit\"\n        >\n          Lisää\n        </button>\n      </form>\n    </div>\n  )\n}\n\nconst mapStateToProps = () => {\n  return {\n  }\n}\n\nconst connectedAddTip = connect(mapStateToProps, {\n  addTip,\n})(AddTip)\n\nexport default connectedAddTip\n","import React from 'react'\n\nconst Loading = () => <div>Lataillaan...</div>\n\nexport default Loading\n","import React from 'react'\n// import { Link } from 'react-router-dom';\n\nconst NoTips = () => (\n  <div>\n    <p>Et ole lisännyt vinkkejä vielä</p>\n  </div>\n)\n\nexport default NoTips\n","import React from 'react'\nimport { connect } from 'react-redux'\n// import { Link } from 'react-router-dom';\nimport Loading from './Loading'\nimport NoTips from './NoTips'\n\nconst TipList = (props) => {\n  const { processing, tipdata } = props.tips\n\n  if (processing) {\n    return <Loading />\n  }\n\n  if (tipdata.length === 0) {\n    return <NoTips />\n  }\n\n  console.log('TipList: tipdata', tipdata)\n\n  return (\n    <div>\n      <h2>Lukuvinkit</h2>\n      {tipdata.map((tip) => {\n        return (\n          <div data-cy=\"tip-item\" key={tip.id} className=\"tip-list-item\">\n            <div className=\"tip-content\">\n              {tip.title} - <a href={tip.url}>{tip.url}</a>\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    tips: state.tips,\n  }\n}\n\nconst connectedTipList = connect(mapStateToProps)(TipList)\nexport default connectedTipList\n","import React, { useEffect } from 'react'\nimport { Route /*, Switch */ } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { initTips } from './reducers/tipReducer'\n\nimport AddTip from './components/AddTip'\nimport TipList from './components/TipList'\n\nconst App = (props) => {\n  useEffect(() => {\n    if (props.tips.processing) {\n      props.initTips()\n    }\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"heading heading__h1\">Lukuvinkkikirjasto</h1>\n      <div className=\"content-container\">\n        <Route\n          path=\"/\"\n          render={() => (\n            <>\n              <AddTip />\n              <TipList />\n            </>\n          )}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    tips: state.tips,\n  }\n}\n\nconst connectedApp = connect(mapStateToProps, {\n  initTips,\n})(App)\nexport default connectedApp\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport tipReducer from './reducers/tipReducer'\n\nconst reducer = combineReducers({\n  tips: tipReducer\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nstore.subscribe(() => console.log(store.getState()))\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './store'\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>,\n    document.getElementById('app')\n  )\n}\n\nrender()\nstore.subscribe(render)\n"],"sourceRoot":""}