{"version":3,"sources":["services/tips.js","reducers/tipReducer.js","hooks/index.js","components/AddTip.js","components/Loading.js","components/NoTips.js","components/TipList.js","App.js","store.js","index.js"],"names":["getAll","a","axios","get","response","create","newObject","post","initialState","tipdata","processing","error","tipReducer","state","action","type","concat","data","useField","useState","value","setValue","onChange","event","target","reset","connectedAddTip","connect","newTitle","tips","newUrl","addTip","e","tip","dispatch","preventDefault","tipService","result","status","props","removeReset","className","onSubmit","title","url","data-cy","id","Loading","NoTips","connectedTipList","length","console","log","map","key","href","connectedApp","initTips","useEffect","path","render","reducer","combineReducers","store","createStore","applyMiddleware","thunk","subscribe","getState","ReactDOM","document","getElementById"],"mappings":"kSAae,GAAEA,OAVL,uCAAG,4BAAAC,EAAA,sEACUC,IAAMC,IAHf,aAED,cACPC,EADO,yBAENA,GAFM,2CAAH,qDAUaC,OALb,uCAAG,WAAMC,GAAN,eAAAL,EAAA,sEACUC,IAAMK,KARf,YAQ6BD,GAD9B,cACPF,EADO,yBAENA,GAFM,2CAAH,uDCwCNI,EAAe,CACnBC,QAAS,GACTC,YAAY,EACZC,MAAO,MAiCMC,EA9BI,WAAmC,IAAlCC,EAAiC,uDAAzBL,EAAcM,EAAW,uCACnD,OAAQA,EAAOC,MACb,IAAK,YAKL,IAAK,UACH,OAAO,eACFF,EADL,CAEEH,YAAY,IAEhB,IAAK,iBACH,OAAO,eACFG,EADL,CAEEJ,QAASI,EAAMJ,QAAQO,OAAOF,EAAOG,MACrCP,YAAY,EACZC,MAAO,OAEX,IAAK,cACH,OAAO,eACFE,EADL,CAEEF,MAAOG,EAAOG,KACdP,YAAY,IAEhB,QACE,OAAOG,I,gBC9EAK,EAAW,SAACH,GAAU,IAAD,EACNI,mBAAS,IADH,mBACzBC,EADyB,KAClBC,EADkB,KAWhC,MAAO,CACLN,OACAK,QACAE,SAXe,SAACC,GAChBF,EAASE,EAAMC,OAAOJ,QAWtBK,MARY,WACZJ,EAAS,OCoDEK,EAJSC,aAPA,SAACd,GACvB,MAAO,CACLe,SAAUf,EAAMgB,KAAKD,SACrBE,OAAQjB,EAAMgB,KAAKC,UAI0B,CAC/CC,OFnCoB,SAACC,EAAGC,GACxB,8CAAO,WAAOC,GAAP,eAAAjC,EAAA,6DACL+B,EAAEG,iBAEFD,EAAS,CACPnB,KAAM,YAJH,SAOgBqB,EAAW/B,OAAO4B,GAPlC,OASiB,OAFhBI,EAPD,QASMC,OACTJ,EAAS,CACPnB,KAAM,iBACNE,KAAMoB,EAAOpB,OAGfiB,EAAS,CACPnB,KAAM,cACNE,KAAMoB,IAjBL,2CAAP,wDEiCsBV,EArDT,SAACY,GACd,IAAMX,EAAWV,EAAS,QACpBY,EAASZ,EAAS,QAKlBsB,EAAc,SAAC,GAAD,EAAGf,MAAH,iCAEpB,OACE,yBAAKgB,UAAU,sBACb,kDACA,0BACEC,SAAU,SAACV,GAAD,OACRO,EAAMR,OAAOC,EAAG,CACdW,MAAOf,EAASR,MAChBwB,IAAKd,EAAOV,UAMhB,6BACE,0CACA,yCACEyB,UAAQ,YACRC,GAAG,aACCN,EAAYZ,MAGpB,6BACE,yCACA,yCAAOiB,UAAQ,UAAUC,GAAG,WAAcN,EAAYV,MAExD,4BACEW,UAAU,sCACVI,UAAQ,UACR9B,KAAK,UAHP,oBCnCOgC,EAFC,kBAAM,+CCOPC,EANA,kBACb,6BACE,wECqCWC,EADUtB,aAND,SAACd,GACvB,MAAO,CACLgB,KAAMhB,EAAMgB,QAISF,EAnCT,SAACY,GAAW,IAAD,EACOA,EAAMV,KAA9BnB,EADiB,EACjBA,WAAYD,EADK,EACLA,QAEpB,OAAIC,EACK,kBAAC,EAAD,MAGc,IAAnBD,EAAQyC,OACH,kBAAC,EAAD,OAGTC,QAAQC,IAAI,mBAAoB3C,GAG9B,6BACE,0CACCA,EAAQ4C,KAAI,SAACpB,GACZ,OACE,yBAAKY,UAAQ,WAAWS,IAAKrB,EAAIa,GAAIL,UAAU,iBAC7C,yBAAKA,UAAU,eACZR,EAAIU,MADP,MACgB,uBAAGY,KAAMtB,EAAIW,KAAMX,EAAIW,eCkBpCY,EAHM7B,aANG,SAACd,GACvB,MAAO,CACLgB,KAAMhB,EAAMgB,QAI8B,CAC5C4B,SNxCsB,WACtB,8CAAO,WAAOvB,GAAP,eAAAjC,EAAA,6DACLiC,EAAS,CACPnB,KAAM,cAFH,SAKgBqB,EAAWpC,SAL3B,OAOiB,OAFhBqC,EALD,QAOMC,OACTJ,EAAS,CACPnB,KAAM,iBACNE,KAAMoB,EAAOpB,OAGfiB,EAAS,CACPnB,KAAM,cACNE,KAAMoB,IAfL,2CAAP,wDMsCmBV,EAhCT,SAACY,GAQX,OAPAmB,qBAAU,WACJnB,EAAMV,KAAKnB,YACb6B,EAAMkB,aAGP,IAGD,yBAAKhB,UAAU,OACb,wBAAIA,UAAU,uBAAd,sBACA,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CACEkB,KAAK,IACLC,OAAQ,kBACN,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,e,gBCrBRC,EAAUC,YAAgB,CAC9BjC,KAAMjB,IAGFmD,EAAQC,YAAYH,EAASI,YAAgBC,MAEnDH,EAAMI,WAAU,kBAAMhB,QAAQC,IAAIW,EAAMK,eAEzBL,QCNTH,EAAS,WACbS,IAAST,OACP,kBAAC,IAAD,CAAUG,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJO,SAASC,eAAe,SAI5BX,IACAG,EAAMI,UAAUP,K","file":"static/js/main.3e8bc128.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/tips'\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response\r\n}\r\n\r\nconst create = async newObject => {\r\n  const response = await axios.post(baseUrl, newObject)\r\n  return response\r\n}\r\n\r\nexport default { getAll, create }\r\n","import tipService from '../services/tips'\r\n\r\nexport const initTips = () => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: 'INIT_TIPS',\r\n    })\r\n\r\n    const result = await tipService.getAll()\r\n\r\n    if (result.status === 200) {\r\n      dispatch({\r\n        type: 'ACTION_SUCCESS',\r\n        data: result.data,\r\n      })\r\n    } else {\r\n      dispatch({\r\n        type: 'ACTION_FAIL',\r\n        data: result,\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const addTip = (e, tip) => {\r\n  return async (dispatch) => {\r\n    e.preventDefault()\r\n\r\n    dispatch({\r\n      type: 'ADD_TIP'\r\n    })\r\n\r\n    const result = await tipService.create(tip)\r\n\r\n    if (result.status === 200) {\r\n      dispatch({\r\n        type: 'ACTION_SUCCESS',\r\n        data: result.data\r\n      })\r\n    } else {\r\n      dispatch({\r\n        type: 'ACTION_FAIL',\r\n        data: result\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  tipdata: [],\r\n  processing: true,\r\n  error: null,\r\n}\r\n\r\nconst tipReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'INIT_TIPS':\r\n      return {\r\n        ...state,\r\n        processing: true\r\n      }\r\n    case 'ADD_TIP':\r\n      return {\r\n        ...state,\r\n        processing: true,\r\n      }\r\n    case 'ACTION_SUCCESS':\r\n      return {\r\n        ...state,\r\n        tipdata: state.tipdata.concat(action.data),\r\n        processing: false,\r\n        error: null\r\n      }\r\n    case 'ACTION_FAIL':\r\n      return {\r\n        ...state,\r\n        error: action.data,\r\n        processing: false\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default tipReducer\r\n","import { useState } from 'react'\r\n\r\nexport const useField = (type) => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const reset = () => {\r\n    setValue('')\r\n  }\r\n\r\n  return {\r\n    type,\r\n    value,\r\n    onChange,\r\n    reset,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addTip } from '../reducers/tipReducer'\r\nimport { useField } from '../hooks/index'\r\n\r\nconst AddTip = (props) => {\r\n  const newTitle = useField('text')\r\n  const newUrl = useField('text')\r\n  // const title = useField('text')\r\n  // const url = useField('text'\r\n\r\n  // eslint-disable-next-line\r\n  const removeReset = ({ reset: _, ...clone }) => clone\r\n\r\n  return (\r\n    <div className=\"form form--add-tip\">\r\n      <h3>Lisää vinkki</h3>\r\n      <form\r\n        onSubmit={(e) =>\r\n          props.addTip(e, {\r\n            title: newTitle.value,\r\n            url: newUrl.value,\r\n            // title: title.value,\r\n            // url: url.value\r\n          })\r\n        }\r\n      >\r\n        <div>\r\n          <label>Otsikko</label>\r\n          <input\r\n            data-cy=\"tip-title\"\r\n            id=\"tip_title\"\r\n            {...removeReset(newTitle)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Linkki</label>\r\n          <input data-cy=\"tip-url\" id=\"tip_url\" {...removeReset(newUrl)} />\r\n        </div>\r\n        <button\r\n          className=\"button button-primary button-submit\"\r\n          data-cy=\"add-tip\"\r\n          type=\"submit\"\r\n        >\r\n          Lisää\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    newTitle: state.tips.newTitle,\r\n    newUrl: state.tips.newUrl,\r\n  }\r\n}\r\n\r\nconst connectedAddTip = connect(mapStateToProps, {\r\n  addTip,\r\n})(AddTip)\r\n\r\nexport default connectedAddTip\r\n","import React from 'react'\r\n\r\nconst Loading = () => <div>Lataillaan...</div>\r\n\r\nexport default Loading\r\n","import React from 'react'\r\n// import { Link } from 'react-router-dom';\r\n\r\nconst NoTips = () => (\r\n  <div>\r\n    <p>Et ole lisännyt vinkkejä vielä</p>\r\n  </div>\r\n)\r\n\r\nexport default NoTips\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n// import { Link } from 'react-router-dom';\r\nimport Loading from './Loading'\r\nimport NoTips from './NoTips'\r\n\r\nconst TipList = (props) => {\r\n  const { processing, tipdata } = props.tips\r\n\r\n  if (processing) {\r\n    return <Loading />\r\n  }\r\n\r\n  if (tipdata.length === 0) {\r\n    return <NoTips />\r\n  }\r\n\r\n  console.log('TipList: tipdata', tipdata)\r\n\r\n  return (\r\n    <div>\r\n      <h2>Lukuvinkit</h2>\r\n      {tipdata.map((tip) => {\r\n        return (\r\n          <div data-cy=\"tip-item\" key={tip.id} className=\"tip-list-item\">\r\n            <div className=\"tip-content\">\r\n              {tip.title} - <a href={tip.url}>{tip.url}</a>\r\n            </div>\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tips: state.tips,\r\n  }\r\n}\r\n\r\nconst connectedTipList = connect(mapStateToProps)(TipList)\r\nexport default connectedTipList\r\n","import React, { useEffect } from 'react'\r\nimport { Route /*, Switch */ } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { initTips } from './reducers/tipReducer'\r\n\r\nimport AddTip from './components/AddTip'\r\nimport TipList from './components/TipList'\r\n\r\nconst App = (props) => {\r\n  useEffect(() => {\r\n    if (props.tips.processing) {\r\n      props.initTips()\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"heading heading__h1\">Lukuvinkkikirjasto</h1>\r\n      <div className=\"content-container\">\r\n        <Route\r\n          path=\"/\"\r\n          render={() => (\r\n            <>\r\n              <AddTip />\r\n              <TipList />\r\n            </>\r\n          )}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tips: state.tips,\r\n  }\r\n}\r\n\r\nconst connectedApp = connect(mapStateToProps, {\r\n  initTips,\r\n})(App)\r\nexport default connectedApp\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport tipReducer from './reducers/tipReducer'\r\n\r\nconst reducer = combineReducers({\r\n  tips: tipReducer\r\n})\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk))\r\n\r\nstore.subscribe(() => console.log(store.getState()))\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport store from './store'\r\n\r\nconst render = () => {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>,\r\n    document.getElementById('app')\r\n  )\r\n}\r\n\r\nrender()\r\nstore.subscribe(render)\r\n"],"sourceRoot":""}